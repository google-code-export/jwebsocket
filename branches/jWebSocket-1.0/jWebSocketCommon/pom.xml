<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<version>1.0</version>
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.jwebsocket</groupId>
	<artifactId>jWebSocketCommon</artifactId>
	<name>jWebSocketCommon</name>
	<description>jWebSocket Common Module</description>
	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
		</license>
	</licenses>
	<developers>
		<developer>
			<id>aschulze</id>
			<name>Alexander Schulze</name>
			<email>aschulze@jwebsocket.org</email>
		</developer>
	</developers>
	<scm>
		<connection>scm:svn:http://jwebsocket.googlecode.com/svn/tags/RC3-b41002/jWebSocket-1.0/jWebSocketCommon</connection>
		<developerConnection>scm:svn:http://jwebsocket.googlecode.com/svn/tags/RC3-b41002/jWebSocket-1.0/jWebSocketCommon</developerConnection>
		<url>http://jwebsocket.googlecode.com/svn/tags/RC3-b41002/jWebSocket-1.0/jWebSocketCommon</url>
	</scm>
	<packaging>jar</packaging>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<org.springframework.version>3.1.4.RELEASE</org.springframework.version>
	</properties>
	<build>
		<!-- use shared directory here, to share code across various platforms -->
		<sourceDirectory>../shared/J2SE/jWebSocketCommon</sourceDirectory>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<outputDirectory>../../../rte/jWebSocket-${project.version}/libs</outputDirectory>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
						</manifest>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.9.1</version>
				<configuration>
					<!-- directory for the html javadocs -->
					<reportOutputDirectory>${project.basedir}/../../../javadocs/${project.name}</reportOutputDirectory>
					<!-- directory for the jar javadocs -->
					<jarOutputDirectory>${project.basedir}/../../../javadocs</jarOutputDirectory>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.3</version>
				<configuration>
					<!-- directory for the source code jar -->
					<outputDirectory>${project.basedir}/../../../javadocs</outputDirectory>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			
			<!-- start create assemblies -->
			<!-- description: http://binkley.blogspot.com/2006/12/making-one-jar-with-maven.html -->
			<!--
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.4</version>
				<executions>
					<execution>
						<id>Bundle</id>
						<configuration>
							<finalName>jWebSocketCommon</finalName>
							<outputDirectory>../../../rte/jWebSocket-${project.version}/libs</outputDirectory>
							<descriptors>
								<descriptor>src/assembly/one-jar.xml</descriptor>
							</descriptors>
						</configuration>
						<phase>install</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			-->
		</plugins>
		<extensions>
			<!-- Enabling the use of FTP -->
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-ftp</artifactId>
				<version>2.6</version>
			</extension>
		</extensions>
	</build>

	<!--  define all the dependencies here -->
	<dependencies>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.fusesource</groupId>
			<artifactId>sigar</artifactId>
			<version>1.6.4</version>
		</dependency>
		<!-- javolution -->
		<dependency>
			<groupId>javolution</groupId>
			<artifactId>javolution</artifactId>
			<version>5.5.1</version>
		</dependency>
		<!-- jackson -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>2.4.3</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>2.4.3</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>2.4.3</version>
		</dependency>
<!--		
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-core-asl</artifactId>
			<version>1.9.13</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
			<version>1.9.13</version>
		</dependency>
-->		
		<!-- json.org -->
		<dependency>
			<groupId>org.netbeans.external</groupId>
			<artifactId>json-2</artifactId>
			<version>RELEASE65</version>
			<type>jar</type>
		</dependency>
		<!-- Required for Base64 for binary transfer wrapped in text packets -->
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.8</version>
		</dependency>
		<!-- Required for zipping packages in the server and the SE client -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-compress</artifactId>
			<version>1.5</version>
		</dependency>
		<!-- Required for any server or client side file management -->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.4</version>
		</dependency>
		<!-- Required for message queuing in the server as well as in the client -->
		<!--
		<dependency> 
			<groupId>org.apache.activemq</groupId> 
			<artifactId>activemq-all</artifactId> 
			<version>5.8.0</version> 
		</dependency>
		-->
		<dependency> 
			<groupId>org.apache.activemq</groupId> 
			<artifactId>activemq-all</artifactId> 
			<version>5.8.0</version> 
		</dependency>
		<!-- Required for management of relational database systems and ItemStorage PlugIn. -->
		<dependency>
			<groupId>org.jwebsocket</groupId>
			<artifactId>jWebSocketDynamicSQL</artifactId>
			<version>${project.version}</version>
		</dependency>
	</dependencies>

	<repositories>
		<!-- jWebSocket repository -->
		<repository>
			<id>jWebSocket</id>
			<name>jWebSocket Maven Repository</name>
			<url>http://mvn.jwebsocket.org</url>
		</repository>
		<!-- NetBeans repository -->
		<repository>
			<id>netbeans</id>
			<name>NetBeans Repository</name>
			<url>http://bits.netbeans.org/maven2</url>
		</repository>
	</repositories>

	<distributionManagement>
		<!-- use the following if you're not using a snapshot version. -->
		<repository>
			<id>jWebSocketLocalRepo</id>
			<name>jWebSocketLocalRepo</name>
			<url>file:///${basedir}/../../../repo</url>
		</repository>
	</distributionManagement>

</project>