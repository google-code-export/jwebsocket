<!DOCTYPE html PUBLIC "-//W3C//DTD html 4.01//EN" "http://www.w3.org/TR/html4/transitional.dtd">
<html>
	<head>
		<meta http-equiv="X-UA-Compatible" content="chrome=1">
		<!-- If Google's chrome frame installed, use it! -->
		<!-- Comment needs to be BELOW this meta tag! -->
		<!--
		//	****************************************************************************
		//	jWebSocket Fundamentals Demo (uses jWebSocket Client and Server)
		//	Copyright (c) 2010 Alexander Schulze, Innotrade GmbH, Herzogenrath
		//	****************************************************************************
		//	This program is free software; you can redistribute it and/or modify it
		//	under the terms of the GNU Lesser General Public License as published by the
		//	Free Software Foundation; either version 3 of the License, or (at your
		//	option) any later version.
		//	This program is distributed in the hope that it will be useful, but WITHOUT
		//	ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
		//	FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for
		//	more details.
		//	You should have received a copy of the GNU Lesser General Public License along
		//	with this program; if not, see <http://www.gnu.org/licenses/lgpl.html>.
		//	****************************************************************************
		-->
		<meta http-equiv="Content-Language" content="en">
		<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
		<title>jWebSocket STOMP over WebSockets Demo</title>
		<link rel="stylesheet" type="text/css" href="../../res/css/jwebsocket.css">

		<script src="../../lib/stomp/stomp.js" type="text/javascript"></script>
		<script src="../../res/js/jWebSocket.js" type="text/javascript"></script>
		<script src="../../res/js/jWebSocketStomp.js" type="text/javascript"></script>
		<script type="text/javascript" language="JavaScript">

			var eLog = null;
			var	eMessage;
			var eTargetId;
			var mClient = null;
			var mEndPointId = jws.tools.createUUID();
			var mJMSGatewayId = "org.jwebsocket.jms.aschulze-dt";
			var mGatewayTopic = "/topic/org.jwebsocket.jms.gateway";

			function log(aString) {
				eLog.innerHTML +=
					aString + "<br>";
				if (eLog.scrollHeight > eLog.clientHeight) {
					eLog.scrollTop = eLog.scrollHeight - eLog.clientHeight;
				}
			}

			function clearLog() {
				eLog.innerHTML = "";
				eLog.scrollTop = 0;
			}

			function connect() {
				// http://jmesnil.net/stomp-websocket/doc/
				var lURL = "ws://localhost:61614/stomp";
				
				log("Connecting to " + lURL + " ...");
				mClient = Stomp.client(lURL);

				var lConnectCallback = function() {
					log("Connected!");
					
					mClient.subscribe(
					// the JMS gateway topic
					mGatewayTopic,  
					// callback
					function( aMessage ) {
						log("Received: " + aMessage.body );
						try {
							var lToken = JSON.parse( aMessage.body );
							if( "org.jwebsocket.jms.gateway" === lToken.ns ) {
								if( "welcome" === lToken.type ) {
									sendToken({
										ns: "org.jwebsocket.plugins.system",
										type: "login",
										username: "root",
										password: "root"
									});
								}	
							}
						} catch( aEx ) {
							log("Could not parse message '" 
								+ aMessage.body + "'.");
						}
					}, {
						// headers	
						id: mEndPointId,
						selector: "targetId='" + mEndPointId + "'"
					}
				);
				};
				
				var lErrorCallback = function() {
					log("Error on connection!");
				};

				mClient.connect(
				"", // username
				"", // username 
				lConnectCallback, // on successful connection
				lErrorCallback // on error
			);
			}
			
			function sendToken( aToken ) {
				var lJSON = JSON.stringify( aToken );
				mClient.send(
				mGatewayTopic, 
				{	sourceId: mEndPointId,
					targetId: mJMSGatewayId
				},
				lJSON
			);
			}

			function broadcast() {
				var lMsg = eMessage.value;
				log("Broadcasting '" + lMsg + "', waiting for answer...");
				sendToken({
					ns: "org.jwebsocket.plugins.system",
					type: "broadcast",
					sourceId: mEndPointId,
					sender: null,
					pool: null,
					data: lMsg,
					senderIncluded: false,
					responseRequested: true
				});		
			}

			function disconnect() {
				if( mClient ) {
					log( "Disconnecting..." );
					mClient.disconnect();
					log( "Disconnected" );
				} else {
					log( "Not connected" );
				}
			}

			function login() {
				if (lWSC) {
					log( "Logging in..." );
					mClient.send(
					mGatewayTopic, 
					{ priority: 4 }, 
					"Hello, STOMP"
				);
				}
			}

			function logout() {
				if (lWSC) {
					log("Logging out...");
					mClient.send(
					mGatewayTopic, 
					{ priority: 4 }, 
					"Hello, STOMP"
				);
				}
			}

			function auth() {
				if (lWSC) {
					log("Authenticating...");
				}
			}

			function deauth() {
				if (lWSC) {
					log("Deauthenticating...");
				}
			}

			function getAuth() {
				if (lWSC) {
					log("Getting authorities...");
				}
			}

			function initPage() {
				eLog = jws.$("sdivLog");
				eMessage = jws.$("stxfMsg");
				eTargetId = jws.$("stxfTargetId");
				if (window.WebSocket) {

				} else {
					jws.$("schkReconnect").setAttribute("disabled", "disabled");
					jws.$("sbtnConnect").setAttribute("disabled", "disabled");
					jws.$("sbtnDisconnect").setAttribute("disabled", "disabled");
					jws.$("sbtnClear").setAttribute("disabled", "disabled");
					jws.$("stxfMsg").setAttribute("disabled", "disabled");
					jws.$("stxfTargetId").setAttribute("disabled", "disabled");
					jws.$("stxfBroadcast").setAttribute("disabled", "disabled");
					jws.$("sbtnSend").setAttribute("disabled", "disabled");

					var lMsg = jws.MSG_WS_NOT_SUPPORTED;
					alert(lMsg);
					log(lMsg);
				}
			}

			function exitPage() {
				disconnect();
			}

		</script>
	</head>

	<body
		onload="initPage();"
		onunload="exitPage();"
		>
		<table class="tblHeader" width="100%" cellspacing="0" cellpadding="0">
			<tr>
				<td class="tdHeader" width="">jWebSocket JMS Gateway - STOMP over WebSockets Demo</td>
				<td class="tdHeader" width="1%"><img id="simgStatus" src="../../images/disconnected.png" align="right"/></td>
				<td class="tdHeader" width="1%"><span id="slblClientId">&nbsp;Client&#x2011;Id:&nbsp;-</span></td>
			</tr>
		</table>

		<p>This demo shows how to easily set up a jWebSocket JMS Gateway client, 
			which communicates via STOMP over WebSockets with the jWebSocket subsystem.</p>
		<div id="sdivLog" class="sdivContainer"
			 style="position:relative; height:300px; overflow:auto;">
		</div>
		<div class="sdivContainer">
			<table class="stlbDlg" border="0" cellpadding="3" cellspacing="0" width="100%">
				<tr class="strDlg">
					<td class="stdDlg" width="5">
						<input class="sbtnDlg" id="sbtnConnect" type="button" value="Connect" onclick="connect();"
							   >
					</td>
					<td class="stdDlg" width="5">
						<input class="sbtnDlg" id="sbtnDisconnect" type="button" value="Disconnect" onclick="disconnect();">
					</td>
					<td class="stdDlg" width="5">
						<input class="sbtnDlg" id="sbtnClear" type="button" value="Clear Log" onclick="clearLog();"
							   title="Clears the result and event log above.">
					</td>
					<td class="stdDlg" width="5">Message</td>
					<td class="stdDlg" width="">
						<input class="stxfDlg" id="stxfMsg" type="text" value="Please type your message here!" style="width:100%">
					</td>
					<td class="stdDlg" width="5">
						<input class="sbtnDlg" id="sbtnBroadcast" type="button" value="Broadcast" onclick="broadcast();">
					</td>
				</tr>
				<tr class="strDlg">
					<td class="stdDlg" width="5">
						<input class="sbtnDlg" id="sbtnLogin" type="button" value="Login" onclick="login();"
							   title="Authenticates you against the jWebSocket Server.">
					</td>
					<td class="stdDlg" width="5">
						<input class="sbtnDlg" id="sbtnLogout" type="button" value="Logout" onclick="logout();"
							   title="Logs you out and disconnects from the jWebSocket server.">
					</td>
					<td class="stdDlg" width="5">
						&nbsp;
					</td>
					<td class="stdDlg" width="5" >						
						TargetId
					</td>
					<td class="stdDlg" width="">
						<input class="stxfDlg" id="stxfTargetId" type="text" value="Please type your target id here!" style="width:100%">
					</td>
					<td class="stdDlg" width="5">
						<input class="sbtnDlg" id="sbtnSend" type="button" value="Send" onclick="send();">
					</td>
				</tr>
				<tr class="strDlg">
					<td class="stdDlg" width="5">
						<input class="sbtnDlg" id="sbtnAuth" type="button" value="Auth" onclick="auth();"
							   title="Authenticates you against the jWebSocket Server.">
					</td>
					<td class="stdDlg" width="5">
						<input class="sbtnDlg" id="sbtnDeauth" type="button" value="De-Auth" onclick="deauth();"
							   title="Logs you out and disconnects from the jWebSocket server.">
					</td>
					<td class="stdDlg" width="5">
						<input class="sbtnDlg" id="sbtnDeauth" type="button" value="Get Auth." onclick="getAuth();"
							   title="Retreives the authorities for the user.">
					</td>
				</tr>
			</table>
		</div>
	</body>
</html>
